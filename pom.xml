<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">    
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.laibao.vavr</groupId>
    <artifactId>vavr-in-action</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <developers>
        <developer>
            <id>wanglaibao</id>
            <name>小宝在杭州</name>
            <email>1131751437@qq.com</email>
            <url>https://github.com/wanglaibao</url>
            <roles>
                <role>Coder</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:wanglaibao/vavr-in-action.git</connection>
        <developerConnection>scm:git:git@github.com:wanglaibao/vavr-in-action.git</developerConnection>
        <url>https://github.com/wanglaibao/vavr-in-action</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <kotlin.version>1.3.0</kotlin.version>
        <arrow-kt.version>0.8.0</arrow-kt.version>
        <junit.version>4.12</junit.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!-- Arrow Core -->
        <!-- Basic data types such as Option, Either, and others are part of the foundation that Arrow is built on -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-core</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>

        <!-- Arrow Data -->
        <!-- Advanced data types such as Kleisli, EitherT, etc -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-data</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>

        <!-- Arrow Type classes -->
        <!-- FP type classes Functor, Applicative, Monad, etc. -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-typeclasses</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>


        <!-- Arrow Instances -->
        <!-- Implicit instances for all the Arrow data types providing instances of the FP type classes -->

        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-instances</artifactId>
            <version>0.5.5</version>
        </dependency>

        <!-- Arrow Free -->
        <!-- Free data structures, Free and FreeApplicative, Cofree, etc. -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-free</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>


        <!-- Arrow MTL -->
        <!-- MTL type classes that allow for the abstraction of monad transformers. FunctorFilter, MonadReader, etc -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-mtl</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>

        <!-- Arrow Effects -->
        <!-- Arrow’s IO data type and related type classes abstract away effect handling and async behaviors. -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-effects</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>


        <!-- Arrow Effects RX2 -->
        <!-- Instances and utilities to work with RX in a more functional style -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-effects-rx2</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>


        <!-- Arrow Optics -->
        <!-- Lenses, Prisms, Iso, and more data types and type classes to work with immutable data structures such as data classes or sealed families. -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-optics</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>


        <!-- Arrow Syntax -->
        <!-- Syntax facilities derived from data types and type class evidences over the std lib data types. -->
        <dependency>
            <groupId>io.arrow-kt</groupId>
            <artifactId>arrow-syntax</artifactId>
            <version>${arrow-kt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                    <javaParameters>true</javaParameters>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <parameters>true</parameters>
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
